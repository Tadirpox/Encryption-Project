class Main {
  public static void main(String[] args) {
    (new Main()).init();
  }

  void print(Object o) {
    System.out.println(o);
  }

  void printt(Object o) {
    System.out.print(o);
  }

  void init() {

    // This example we are substituting all lower case
    // letters to another lower case letter.
    char[] sub = new char[13];
    sub[0] = '.';
    sub[1] = ',';
    sub[2] = '\'';
    sub[3] = ' ';
    sub[4] = 'a';
    sub[5] = 'e';
    sub[6] = 'i';
    sub[7] = 'o';
    sub[8] = 'u';
    sub[9] = '1';
    sub[10] = '2';
    sub[11] = '3';
    sub[12] = '4';

    char[] sub2 = new char[13];
    sub2[0] = '\u16A0'; // ᚠ
    sub2[1] = '\u16A1'; // ᚡ
    sub2[2] = '\u16A2'; // ᚢ
    sub2[3] = '\u16A3'; // ᚣ
    sub2[4] = '\u16A4'; // ᚤ
    sub2[5] = '\u16A5'; // ᚥ
    sub2[6] = '\u16A6'; // ᚦ
    sub2[7] = '\u16A7'; // ᚧ
    sub2[8] = '\u16A8'; // ᚨ
    sub2[9] = '\u16A9'; // ᚩ
    sub2[10] = '\u16AA'; // ᚪ
    sub2[11] = '\u16AB'; // ᚫ
    sub2[12] = '\u16AC'; // ᚬ

    // Encoding message
    String file = Input.readFile("Original.txt");

    String encodedMsg1 = subEncryption(file, sub, sub2);
    Input.writeFile("Encode1.txt", encodedMsg1);

    String encodedMsg2 = encode(encodedMsg1);
    Input.writeFile("Encode2.txt", encodedMsg2);

    String encodedMsg3 = mani(encodedMsg2);
    Input.writeFile("Encode3.txt", encodedMsg3);

    // decoding message
    String file2 = Input.readFile("Encode3.txt");

    String decodedMsg1 = mani(file2);
    Input.writeFile("Decode1.txt", decodedMsg1);

    String decodedMsg2 = decode(decodedMsg1);
    Input.writeFile("Decode2.txt", decodedMsg2);

    String decodedMsg3 = subEncryption(decodedMsg2, sub2, sub);
    Input.writeFile("Decode3.txt", decodedMsg3);

  }

  // reverse string
  //String reverse(String txt) {
    //String bld = "";
    //for (int x = 0; x <= txt.length() - 1; x++) {
     // bld = txt.charAt(x) + bld;
    //}
    //return bld;
  //}

  // Cipher encoding with no wrapping
  String encode(String s){
    String bld ="";
  for(int i = 0;i<s.length();i++){
    char x = s.charAt(i);
    if (x == 'b')
      bld += 'o';
    //else if (x =='a')
      //bld += 'n';
    else if (x =='c')
      bld += 'p';
    else if (x =='d')
      bld += 'q';
    //else if (x =='e')
      //bld += 'r';
    else if (x =='f')
      bld += 's';
    else if (x =='g')
      bld += 't';
    else if (x =='h')
      bld += 'u';
    //else if (x =='i')
      //bld += 'v';
    else if (x =='j')
      bld += 'w';
    else if (x =='k')
      bld += 'x';
    else if (x =='l')
      bld += 'y';
    else if (x =='m')
      bld += 'z';
    else if (x =='n')
      bld += 'a';
    //else if (x =='o')
      //bld += 'b';
    else if (x =='p')
      bld += 'c';
    else if (x =='q')
      bld += 'd';
    else if (x =='r')
      bld += 'e';
    else if (x =='s')
      bld += 'f';
    else if (x =='t')
      bld += 'g';
    //else if (x =='u')
      //bld += 'h';
    else if (x =='v')
      bld += 'i';
    else if (x =='w')
      bld += 'j';
    else if (x =='x')
      bld += 'k';
    else if (x =='y')
      bld += 'l';
    else if (x =='z')
      bld += 'm';
    else bld += x;
    
      
    } 
    return bld;
  }


  //String decode(String txt) {
    //String bld = "";
    //int ascii;
    //char ch = '\0';
    //for (int x = 0; x <= txt.length() - 1; x++) {
      //ch = txt.charAt(x);
      //ascii = (int) ch;
      //ascii -= 1;
      //bld += (char) ascii;
    //}
    //return bld;
  //}

  String decode(String s){
    String bld ="";
  for(int i = 0;i<s.length();i++){
    char x = s.charAt(i);
    if (x == 'o')
      bld += 'b';
    //else if (x =='n')
      //bld += 'a';
    else if (x =='p')
      bld += 'c';
    else if (x =='q')
      bld += 'd';
    //else if (x =='r')
      //bld += 'e';
    else if (x =='s')
      bld += 'f';
    else if (x =='t')
      bld += 'g';
    else if (x =='u')
      bld += 'h';
    //else if (x =='v')
      //bld += 'i';
    else if (x =='w')
      bld += 'j';
    else if (x =='x')
      bld += 'k';
    else if (x =='y')
      bld += 'l';
    else if (x =='z')
      bld += 'm';
    else if (x =='a')
      bld += 'n';
   // else if (x =='b')
      //bld += 'o';
    else if (x =='c')
      bld += 'p';
    else if (x =='d')
      bld += 'q';
    else if (x =='e')
      bld += 'r';
    else if (x =='f')
      bld += 's';
    else if (x =='g')
      bld += 't';
    //else if (x =='h')
      //bld += 'u';
    else if (x =='i')
      bld += 'v';
    else if (x =='j')
      bld += 'w';
    else if (x =='k')
      bld += 'x';
    else if (x =='l')
      bld += 'y';
    else if (x =='m')
      bld += 'z';
    else bld += x;
    
    }
    return bld;
  }
  
  // Substituion encoding
  String subEncryption(String s, char[] sub, char[] sub2) {
    String bld = "";
    char ch = '\0';
    int index = 0;
    for (int x = 0; x <= s.length() - 1; x++) {
      ch = s.charAt(x);
      index = indexOf(ch, sub);
      if (index != -1) {
        bld += sub2[index];
      } else {
        bld += ch;
      }
    }
    return bld;
  }

  int indexOf(char ch, char[] arry) {
    for (int x = 0; x <= arry.length - 1; x++) {
      if (arry[x] == ch) {
        return x;
      }
    }
    return -1;
  }

  int randInt(int lower, int upper) {
    int range = upper - lower;
    return (int) (Math.random() * range + lower);
  }

  String mani(String txt) {
    String bld ="";
    String temp="";
    for(int x = 0; x <= txt.length()-5 ; x+=5){
      temp = txt.substring(x,x+5);
      bld+= ""+temp.charAt(3) + temp.charAt(4) + temp.charAt(2) + temp.charAt(0) + temp.charAt(1);
    }
    return bld;
  }

}
